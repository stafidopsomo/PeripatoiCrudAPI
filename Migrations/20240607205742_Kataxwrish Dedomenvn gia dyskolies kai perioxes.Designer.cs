// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using peripatoiCrud.API.Data;

#nullable disable

namespace peripatoiCrud.API.Migrations
{
    [DbContext(typeof(PeripatoiDbContext))]
    [Migration("20240607205742_Kataxwrish Dedomenvn gia dyskolies kai perioxes")]
    partial class KataxwrishDedomenvngiadyskolieskaiperioxes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("peripatoiCrud.API.Models.Domain.Dyskolia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Onoma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Dyskolies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("09061773-9946-4c79-804e-0f33f6c23213"),
                            Onoma = "EYKOLOS"
                        },
                        new
                        {
                            Id = new Guid("f4db66cf-1936-48ff-b8e7-8c99701bcfd9"),
                            Onoma = "METRIOS"
                        },
                        new
                        {
                            Id = new Guid("ca2f6118-2f8f-4ca5-99f5-31287e3dcf15"),
                            Onoma = "DYSKOLOS"
                        });
                });

            modelBuilder.Entity("peripatoiCrud.API.Models.Domain.Perioxh", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EikonaUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kwdikos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Onoma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Perioxes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("858e610e-fa5e-47dc-9ec4-38af459e1646"),
                            EikonaUrl = "https://media.istockphoto.com/id/1028749698/photo/the-acropolis-of-athens-greece.jpg?s=2048x2048&w=is&k=20&c=FMjbIryuJtIGU83EaaBafEDW49KjhcnUA3TYHfKZWYs=",
                            Kwdikos = "ATH",
                            Onoma = "ATHINA"
                        },
                        new
                        {
                            Id = new Guid("5a1cc102-9bbf-4818-aa76-52d7ebdcff21"),
                            EikonaUrl = "https://images.pexels.com/photos/17505177/pexels-photo-17505177/free-photo-of-white-tower-in-thessaloniki.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1",
                            Kwdikos = "THS",
                            Onoma = "THESSALONIKI"
                        },
                        new
                        {
                            Id = new Guid("d96fe13d-5c86-4425-8075-0c9d3e062d81"),
                            EikonaUrl = "https://images.pexels.com/photos/10400151/pexels-photo-10400151.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1",
                            Kwdikos = "NFP",
                            Onoma = "NAFPLIO"
                        },
                        new
                        {
                            Id = new Guid("79816b96-50ac-43eb-8b74-9407fb54c613"),
                            EikonaUrl = "https://images.pexels.com/photos/13861594/pexels-photo-13861594.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1",
                            Kwdikos = "CRE",
                            Onoma = "KRHTH"
                        },
                        new
                        {
                            Id = new Guid("367e8f8a-6a1b-4d44-b6b8-9366e21bbb83"),
                            EikonaUrl = "https://images.pexels.com/photos/3327997/pexels-photo-3327997.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1",
                            Kwdikos = "RHO",
                            Onoma = "RODOS"
                        });
                });

            modelBuilder.Entity("peripatoiCrud.API.Models.Domain.Peripatos", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DyskoliaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EikonaUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Mhkos")
                        .HasColumnType("float");

                    b.Property<string>("Onoma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Perigrafh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PerioxhId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DyskoliaId");

                    b.HasIndex("PerioxhId");

                    b.ToTable("Peripatoi");
                });

            modelBuilder.Entity("peripatoiCrud.API.Models.Domain.Peripatos", b =>
                {
                    b.HasOne("peripatoiCrud.API.Models.Domain.Dyskolia", "Dyskolia")
                        .WithMany()
                        .HasForeignKey("DyskoliaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("peripatoiCrud.API.Models.Domain.Perioxh", "Perioxh")
                        .WithMany()
                        .HasForeignKey("PerioxhId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dyskolia");

                    b.Navigation("Perioxh");
                });
#pragma warning restore 612, 618
        }
    }
}
